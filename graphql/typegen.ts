/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */

// import type { Context } from "./context"
// import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    // dateTime<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    // dateTime<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  AddToPlaylistInput: {
    // input type
    accountId: string // String!
    owner: string // String!
    playlistId: string // String!
    profileId: string // String!
    publishId: string // String!
  }
  AddToWatchLaterInput: {
    // input type
    accountId: string // String!
    owner: string // String!
    profileId: string // String!
    publishId: string // String!
  }
  BookmarkPostInput: {
    // input type
    accountId: string // String!
    owner: string // String!
    profileId: string // String!
    publishId: string // String!
  }
  CacheSessionInput: {
    // input type
    accountId: string // String!
    address: string // String!
    profileId: string // String!
  }
  CheckPublishPlaylistsInput: {
    // input type
    accountId: string // String!
    owner: string // String!
    profileId: string // String!
    publishId: string // String!
  }
  CommentPublishInput: {
    // input type
    accountId: string // String!
    commentId?: string | null // String
    commentType: NexusGenEnums["CommentType"] // CommentType!
    content?: string | null // String
    contentBlog?: NexusGenScalars["Json"] | null // Json
    htmlContentBlog?: string | null // String
    owner: string // String!
    profileId: string // String!
    publishId: string // String!
  }
  CreateDraftBlogInput: {
    // input type
    accountId: string // String!
    creatorId: string // String!
    owner: string // String!
  }
  CreateDraftVideoInput: {
    // input type
    accountId: string // String!
    creatorId: string // String!
    filename: string // String!
    owner: string // String!
  }
  CreatePlayListInput: {
    // input type
    accountId: string // String!
    name: string // String!
    owner: string // String!
    profileId: string // String!
    publishId: string // String!
  }
  CreateProfileInput: {
    // input type
    accountId: string // String!
    name: string // String!
    owner: string // String!
  }
  DeleteCommentInput: {
    // input type
    accountId: string // String!
    commentId: string // String!
    owner: string // String!
    profileId: string // String!
  }
  DeletePlaylistInput: {
    // input type
    accountId: string // String!
    owner: string // String!
    playlistId: string // String!
    profileId: string // String!
  }
  DeletePublishInput: {
    // input type
    accountId: string // String!
    creatorId: string // String!
    owner: string // String!
    publishId: string // String!
  }
  DontRecommendInput: {
    // input type
    accountId: string // String!
    owner: string // String!
    profileId: string // String!
    targetId: string // String!
  }
  FetchBookmarkInput: {
    // input type
    accountId: string // String!
    cursor?: string | null // String
    orderBy?: NexusGenEnums["PlaylistOrderBy"] | null // PlaylistOrderBy
    owner: string // String!
    profileId: string // String!
  }
  FetchCommentsByPublishIdInput: {
    // input type
    cursor?: string | null // String
    orderBy?: NexusGenEnums["CommentsOrderBy"] | null // CommentsOrderBy
    publishId: string // String!
    requestorId?: string | null // String
  }
  FetchDontRecommendsInput: {
    // input type
    accountId: string // String!
    cursor?: string | null // String
    owner: string // String!
    requestorId: string // String!
  }
  FetchMyPlaylistsInput: {
    // input type
    accountId: string // String!
    cursor?: string | null // String
    owner: string // String!
    profileId: string // String!
  }
  FetchMyPublishesInput: {
    // input type
    accountId: string // String!
    creatorId: string // String!
    cursor?: string | null // String
    owner: string // String!
    publishType?: NexusGenEnums["QueryPublishType"] | null // QueryPublishType
  }
  FetchPlaylistItemsInput: {
    // input type
    accountId: string // String!
    cursor?: string | null // String
    orderBy?: NexusGenEnums["PlaylistOrderBy"] | null // PlaylistOrderBy
    owner: string // String!
    playlistId: string // String!
    profileId: string // String!
  }
  FetchPublishesByCatInput: {
    // input type
    category: NexusGenEnums["Category"] // Category!
    cursor?: string | null // String
    requestorId?: string | null // String
  }
  FetchPublishesByProfileInput: {
    // input type
    creatorId: string // String!
    cursor?: string | null // String
    orderBy?: NexusGenEnums["PublishOrderBy"] | null // PublishOrderBy
    publishType?: NexusGenEnums["QueryPublishType"] | null // QueryPublishType
    requestorId?: string | null // String
  }
  FetchPublishesByQueryStringInput: {
    // input type
    cursor?: string | null // String
    publishType?: NexusGenEnums["QueryPublishType"] | null // QueryPublishType
    query: string // String!
    requestorId?: string | null // String
  }
  FetchPublishesByTagInput: {
    // input type
    cursor?: string | null // String
    publishType?: NexusGenEnums["QueryPublishType"] | null // QueryPublishType
    requestorId?: string | null // String
    tag: string // String!
  }
  FetchPublishesInput: {
    // input type
    cursor?: string | null // String
    orderBy?: NexusGenEnums["PublishOrderBy"] | null // PublishOrderBy
    publishType?: NexusGenEnums["QueryPublishType"] | null // QueryPublishType
    requestorId?: string | null // String
  }
  FetchSubCommentsInput: {
    // input type
    commentId: string // String!
    cursor?: string | null // String
    requestorId?: string | null // String
  }
  FetchSuggestedPublishesInput: {
    // input type
    cursor?: string | null // String
    publishId: string // String!
    requestorId?: string | null // String
  }
  FetchWatchLaterInput: {
    // input type
    accountId: string // String!
    cursor?: string | null // String
    orderBy?: NexusGenEnums["PlaylistOrderBy"] | null // PlaylistOrderBy
    owner: string // String!
    profileId: string // String!
  }
  FollowInput: {
    // input type
    accountId: string // String!
    followerId: string // String!
    owner: string // String!
    profileId: string // String!
  }
  GetMyAccountInput: {
    // input type
    accountType: NexusGenEnums["AccountType"] // AccountType!
  }
  LikeCommentInput: {
    // input type
    accountId: string // String!
    commentId: string // String!
    owner: string // String!
    profileId: string // String!
    publishId: string // String!
  }
  LikePublishInput: {
    // input type
    accountId: string // String!
    owner: string // String!
    profileId: string // String!
    publishId: string // String!
  }
  PlaylistItemStatus: {
    // input type
    isInPlaylist: boolean // Boolean!
    playlistId: string // String!
  }
  QueryByIdInput: {
    // input type
    requestorId?: string | null // String
    targetId: string // String!
  }
  QueryByNameInput: {
    // input type
    name: string // String!
    requestorId?: string | null // String
  }
  RemoveAllBookmarksInput: {
    // input type
    accountId: string // String!
    owner: string // String!
    profileId: string // String!
  }
  RemoveAllWatchLaterInput: {
    // input type
    accountId: string // String!
    owner: string // String!
    profileId: string // String!
  }
  RemoveFromPlaylistInput: {
    // input type
    accountId: string // String!
    owner: string // String!
    playlistId: string // String!
    profileId: string // String!
    publishId: string // String!
  }
  RemoveFromWatchLaterInput: {
    // input type
    accountId: string // String!
    id?: string | null // String
    owner: string // String!
    profileId: string // String!
    publishId: string // String!
  }
  ReportPublishInput: {
    // input type
    accountId: string // String!
    owner: string // String!
    profileId: string // String!
    publishId: string // String!
    reason: NexusGenEnums["ReportReason"] // ReportReason!
  }
  SendTipsInput: {
    // input type
    accountId: string // String!
    owner: string // String!
    profileId: string // String!
    publishId: string // String!
    qty: number // Int!
    receiverId: string // String!
  }
  UpdateBlogInput: {
    // input type
    accountId: string // String!
    content?: NexusGenScalars["Json"] | null // Json
    creatorId: string // String!
    filename?: string | null // String
    htmlContent?: string | null // String
    imageRef?: string | null // String
    imageUrl?: string | null // String
    owner: string // String!
    preview?: string | null // String
    primaryCategory?: NexusGenEnums["Category"] | null // Category
    publishId: string // String!
    secondaryCategory?: NexusGenEnums["Category"] | null // Category
    tags?: string | null // String
    title?: string | null // String
    visibility?: NexusGenEnums["Visibility"] | null // Visibility
  }
  UpdateImageInput: {
    // input type
    accountId: string // String!
    image: string // String!
    imageRef: string // String!
    owner: string // String!
    profileId: string // String!
  }
  UpdateNameInput: {
    // input type
    accountId: string // String!
    newName: string // String!
    owner: string // String!
    profileId: string // String!
  }
  UpdatePlaylistDescriptionInput: {
    // input type
    accountId: string // String!
    description: string // String!
    owner: string // String!
    playlistId: string // String!
    profileId: string // String!
  }
  UpdatePlaylistNameInput: {
    // input type
    accountId: string // String!
    name: string // String!
    owner: string // String!
    playlistId: string // String!
    profileId: string // String!
  }
  UpdatePlaylistsInput: {
    // input type
    accountId: string // String!
    owner: string // String!
    playlists: NexusGenInputs["PlaylistItemStatus"][] // [PlaylistItemStatus!]!
    profileId: string // String!
    publishId: string // String!
  }
  UpdatePreferencesInput: {
    // input type
    accountId: string // String!
    owner: string // String!
    preferences: NexusGenEnums["Category"][] // [Category!]!
    profileId: string // String!
  }
  UpdateVideoInput: {
    // input type
    accountId: string // String!
    contentRef?: string | null // String
    contentURI?: string | null // String
    creatorId: string // String!
    description?: string | null // String
    owner: string // String!
    primaryCategory?: NexusGenEnums["Category"] | null // Category
    publishId: string // String!
    secondaryCategory?: NexusGenEnums["Category"] | null // Category
    tags?: string | null // String
    thumbnail?: string | null // String
    thumbnailRef?: string | null // String
    thumbnailType: NexusGenEnums["ThumbnailType"] // ThumbnailType!
    title?: string | null // String
    visibility?: NexusGenEnums["Visibility"] | null // Visibility
  }
}

export interface NexusGenEnums {
  AccountType: "TRADITIONAL" | "WALLET"
  Category:
    | "AI"
    | "Animals"
    | "Blockchain"
    | "Children"
    | "Education"
    | "Entertainment"
    | "Food"
    | "Gaming"
    | "LifeStyle"
    | "Men"
    | "Movies"
    | "Music"
    | "News"
    | "Other"
    | "Programming"
    | "Science"
    | "Sports"
    | "Technology"
    | "Travel"
    | "Vehicles"
    | "Women"
  CommentType: "COMMENT" | "PUBLISH"
  CommentsOrderBy: "counts" | "newest"
  PlaylistOrderBy: "newest" | "oldest"
  PublishOrderBy: "latest" | "popular"
  PublishType: "Ads" | "Blog" | "Podcast" | "Short" | "Video"
  QueryPublishType: "ads" | "all" | "blogs" | "shorts" | "videos"
  ReportReason:
    | "abuse"
    | "adult"
    | "harass"
    | "harmful"
    | "hateful"
    | "mislead"
    | "spam"
    | "terrorism"
    | "violent"
  ThumbnailType: "custom" | "generated"
  Visibility: "draft" | "private" | "public"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
  Json: any
}

export interface NexusGenObjects {
  Account: {
    // root type
    authUid?: string | null // String
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    id: string // ID!
    owner: string // String!
    type: NexusGenEnums["AccountType"] // AccountType!
    updatedAt?: NexusGenScalars["DateTime"] | null // DateTime
  }
  Blog: {
    // root type
    content: NexusGenScalars["Json"] // Json!
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    excerpt?: string | null // String
    htmlContent?: string | null // String
    publishId: string // String!
    readingTime?: string | null // String
    updatedAt?: NexusGenScalars["DateTime"] | null // DateTime
  }
  Bookmark: {
    // root type
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    id: string // ID!
    profileId: string // String!
    publishId: string // String!
  }
  BookmarkEdge: {
    // root type
    cursor?: string | null // String
    node?: NexusGenRootTypes["Bookmark"] | null // Bookmark
  }
  CalculateTipsResult: {
    // root type
    tips: string // String!
  }
  CheckPublishPlaylistsResponse: {
    // root type
    isInWatchLater: boolean // Boolean!
    items: NexusGenRootTypes["PlaylistItem"][] // [PlaylistItem!]!
    publishId: string // String!
  }
  Comment: {
    // root type
    commentId?: string | null // String
    commentType: NexusGenEnums["CommentType"] // CommentType!
    content?: string | null // String
    contentBlog?: NexusGenScalars["Json"] | null // Json
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    creatorId: string // String!
    htmlContentBlog?: string | null // String
    id: string // ID!
    publishId: string // String!
    updatedAt?: NexusGenScalars["DateTime"] | null // DateTime
  }
  CommentDisLike: {
    // root type
    commentId: string // String!
    profileId: string // String!
  }
  CommentEdge: {
    // root type
    cursor?: string | null // String
    node?: NexusGenRootTypes["Comment"] | null // Comment
  }
  CommentLike: {
    // root type
    commentId: string // String!
    profileId: string // String!
  }
  CreateDraftBlogResult: {
    // root type
    id: string // String!
  }
  CreateDraftVideoResult: {
    // root type
    filename?: string | null // String
    id: string // String!
  }
  DisLike: {
    // root type
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    profileId: string // String!
    publishId: string // String!
  }
  DontRecommend: {
    // root type
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    requestorId: string // String!
    targetId: string // String!
  }
  DontRecommendEdge: {
    // root type
    cursor?: string | null // String
    node?: NexusGenRootTypes["DontRecommend"] | null // DontRecommend
  }
  FetchBookmarkResponse: {
    // root type
    edges: NexusGenRootTypes["BookmarkEdge"][] // [BookmarkEdge!]!
    pageInfo: NexusGenRootTypes["PageInfo"] // PageInfo!
  }
  FetchCommentsResponse: {
    // root type
    edges: NexusGenRootTypes["CommentEdge"][] // [CommentEdge!]!
    pageInfo: NexusGenRootTypes["PageInfo"] // PageInfo!
  }
  FetchDontRecommendsResponse: {
    // root type
    edges: NexusGenRootTypes["DontRecommendEdge"][] // [DontRecommendEdge!]!
    pageInfo: NexusGenRootTypes["PageInfo"] // PageInfo!
  }
  FetchPlaylistItemsResponse: {
    // root type
    edges: NexusGenRootTypes["PlaylistItemEdge"][] // [PlaylistItemEdge!]!
    pageInfo: NexusGenRootTypes["PageInfo"] // PageInfo!
    playlistDescription?: string | null // String
    playlistName: string // String!
  }
  FetchPlaylistsResponse: {
    // root type
    edges: NexusGenRootTypes["PlaylistEdge"][] // [PlaylistEdge!]!
    pageInfo: NexusGenRootTypes["PageInfo"] // PageInfo!
  }
  FetchPreviewPlaylistsResponse: {
    // root type
    edges: NexusGenRootTypes["PreviewPlaylistEdge"][] // [PreviewPlaylistEdge!]!
    pageInfo: NexusGenRootTypes["PageInfo"] // PageInfo!
  }
  FetchPublishesResponse: {
    // root type
    edges: NexusGenRootTypes["PublishEdge"][] // [PublishEdge!]!
    pageInfo: NexusGenRootTypes["PageInfo"] // PageInfo!
  }
  FetchWatchLaterResponse: {
    // root type
    edges: NexusGenRootTypes["WatchLaterEdge"][] // [WatchLaterEdge!]!
    pageInfo: NexusGenRootTypes["PageInfo"] // PageInfo!
  }
  Follow: {
    // root type
    followerId: string // String!
    followingId: string // String!
  }
  Like: {
    // root type
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    profileId: string // String!
    publishId: string // String!
  }
  Mutation: {}
  PageInfo: {
    // root type
    count?: number | null // Int
    endCursor?: string | null // String
    hasNextPage?: boolean | null // Boolean
  }
  Playback: {
    // root type
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    dash: string // String!
    duration: number // Float!
    hls: string // String!
    id: string // ID!
    preview: string // String!
    publishId: string // String!
    thumbnail: string // String!
    updatedAt?: NexusGenScalars["DateTime"] | null // DateTime
    videoId: string // String!
  }
  Playlist: {
    // root type
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    description?: string | null // String
    id: string // ID!
    name: string // String!
    ownerId: string // String!
  }
  PlaylistEdge: {
    // root type
    cursor?: string | null // String
    node?: NexusGenRootTypes["Playlist"] | null // Playlist
  }
  PlaylistItem: {
    // root type
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    id: string // ID!
    playlistId: string // String!
    publishId: string // String!
  }
  PlaylistItemEdge: {
    // root type
    cursor?: string | null // String
    node?: NexusGenRootTypes["PlaylistItem"] | null // PlaylistItem
  }
  PreviewPlaylist: {
    // root type
    count: number // Int!
    id: string // String!
    lastItem?: NexusGenRootTypes["Publish"] | null // Publish
    name: string // String!
  }
  PreviewPlaylistEdge: {
    // root type
    cursor?: string | null // String
    node?: NexusGenRootTypes["PreviewPlaylist"] | null // PreviewPlaylist
  }
  Profile: {
    // root type
    accountId: string // String!
    bannerImage?: string | null // String
    bannerImageRef?: string | null // String
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    defaultColor?: string | null // String
    displayName: string // String!
    id: string // ID!
    image?: string | null // String
    imageRef?: string | null // String
    name: string // String!
    owner: string // String!
    readPreferences: NexusGenEnums["Category"][] // [Category!]!
    updatedAt?: NexusGenScalars["DateTime"] | null // DateTime
    watchPreferences: NexusGenEnums["Category"][] // [Category!]!
  }
  Publish: {
    // root type
    contentRef?: string | null // String
    contentURI?: string | null // String
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    creatorId: string // String!
    deleting: boolean // Boolean!
    description?: string | null // String
    filename?: string | null // String
    id: string // ID!
    primaryCategory?: NexusGenEnums["Category"] | null // Category
    publishType?: NexusGenEnums["PublishType"] | null // PublishType
    secondaryCategory?: NexusGenEnums["Category"] | null // Category
    tags?: string | null // String
    thumbnail?: string | null // String
    thumbnailRef?: string | null // String
    thumbnailType: NexusGenEnums["ThumbnailType"] // ThumbnailType!
    title?: string | null // String
    transcodeError: boolean // Boolean!
    updatedAt?: NexusGenScalars["DateTime"] | null // DateTime
    uploadError: boolean // Boolean!
    uploading: boolean // Boolean!
    views: number // Int!
    visibility: NexusGenEnums["Visibility"] // Visibility!
  }
  PublishEdge: {
    // root type
    cursor?: string | null // String
    node?: NexusGenRootTypes["Publish"] | null // Publish
  }
  Query: {}
  Report: {
    // root type
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    id: string // ID!
    publishId: string // String!
    reason: NexusGenEnums["ReportReason"] // ReportReason!
    submittedById: string // String!
  }
  SendTipsResult: {
    // root type
    amount: string // String!
    fee: string // String!
    from: string // String!
    to: string // String!
  }
  Tip: {
    // root type
    amount: string // String!
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    fee: string // String!
    from: string // String!
    id: string // ID!
    publishId: string // String!
    receiverId: string // String!
    senderId: string // String!
    to: string // String!
  }
  WatchLater: {
    // root type
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    id: string // ID!
    profileId: string // String!
    publishId: string // String!
  }
  WatchLaterEdge: {
    // root type
    cursor?: string | null // String
    node?: NexusGenRootTypes["WatchLater"] | null // WatchLater
  }
  WriteResult: {
    // root type
    status: string // String!
  }
}

export interface NexusGenInterfaces {}

export interface NexusGenUnions {}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes &
  NexusGenScalars &
  NexusGenEnums

export interface NexusGenFieldTypes {
  Account: {
    // field return type
    authUid: string | null // String
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    defaultProfile: NexusGenRootTypes["Profile"] | null // Profile
    id: string // ID!
    owner: string // String!
    profiles: NexusGenRootTypes["Profile"][] // [Profile!]!
    type: NexusGenEnums["AccountType"] // AccountType!
    updatedAt: NexusGenScalars["DateTime"] | null // DateTime
  }
  Blog: {
    // field return type
    content: NexusGenScalars["Json"] // Json!
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    excerpt: string | null // String
    htmlContent: string | null // String
    publish: NexusGenRootTypes["Publish"] | null // Publish
    publishId: string // String!
    readingTime: string | null // String
    updatedAt: NexusGenScalars["DateTime"] | null // DateTime
  }
  Bookmark: {
    // field return type
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    id: string // ID!
    profile: NexusGenRootTypes["Profile"] // Profile!
    profileId: string // String!
    publish: NexusGenRootTypes["Publish"] // Publish!
    publishId: string // String!
  }
  BookmarkEdge: {
    // field return type
    cursor: string | null // String
    node: NexusGenRootTypes["Bookmark"] | null // Bookmark
  }
  CalculateTipsResult: {
    // field return type
    tips: string // String!
  }
  CheckPublishPlaylistsResponse: {
    // field return type
    isInWatchLater: boolean // Boolean!
    items: NexusGenRootTypes["PlaylistItem"][] // [PlaylistItem!]!
    publishId: string // String!
  }
  Comment: {
    // field return type
    comment: NexusGenRootTypes["Comment"] | null // Comment
    commentId: string | null // String
    commentType: NexusGenEnums["CommentType"] // CommentType!
    comments: NexusGenRootTypes["Comment"][] // [Comment!]!
    commentsCount: number // Int!
    content: string | null // String
    contentBlog: NexusGenScalars["Json"] | null // Json
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    creator: NexusGenRootTypes["Profile"] // Profile!
    creatorId: string // String!
    disLiked: boolean | null // Boolean
    disLikes: NexusGenRootTypes["CommentDisLike"][] // [CommentDisLike!]!
    disLikesCount: number // Int!
    htmlContentBlog: string | null // String
    id: string // ID!
    liked: boolean | null // Boolean
    likes: NexusGenRootTypes["CommentLike"][] // [CommentLike!]!
    likesCount: number // Int!
    publish: NexusGenRootTypes["Publish"] // Publish!
    publishId: string // String!
    updatedAt: NexusGenScalars["DateTime"] | null // DateTime
  }
  CommentDisLike: {
    // field return type
    comment: NexusGenRootTypes["Comment"] // Comment!
    commentId: string // String!
    profile: NexusGenRootTypes["Profile"] // Profile!
    profileId: string // String!
  }
  CommentEdge: {
    // field return type
    cursor: string | null // String
    node: NexusGenRootTypes["Comment"] | null // Comment
  }
  CommentLike: {
    // field return type
    comment: NexusGenRootTypes["Comment"] // Comment!
    commentId: string // String!
    profile: NexusGenRootTypes["Profile"] // Profile!
    profileId: string // String!
  }
  CreateDraftBlogResult: {
    // field return type
    id: string // String!
  }
  CreateDraftVideoResult: {
    // field return type
    filename: string | null // String
    id: string // String!
  }
  DisLike: {
    // field return type
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    profile: NexusGenRootTypes["Profile"] // Profile!
    profileId: string // String!
    publish: NexusGenRootTypes["Publish"] // Publish!
    publishId: string // String!
  }
  DontRecommend: {
    // field return type
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    requestorId: string // String!
    target: NexusGenRootTypes["Profile"] // Profile!
    targetId: string // String!
  }
  DontRecommendEdge: {
    // field return type
    cursor: string | null // String
    node: NexusGenRootTypes["DontRecommend"] | null // DontRecommend
  }
  FetchBookmarkResponse: {
    // field return type
    edges: NexusGenRootTypes["BookmarkEdge"][] // [BookmarkEdge!]!
    pageInfo: NexusGenRootTypes["PageInfo"] // PageInfo!
  }
  FetchCommentsResponse: {
    // field return type
    edges: NexusGenRootTypes["CommentEdge"][] // [CommentEdge!]!
    pageInfo: NexusGenRootTypes["PageInfo"] // PageInfo!
  }
  FetchDontRecommendsResponse: {
    // field return type
    edges: NexusGenRootTypes["DontRecommendEdge"][] // [DontRecommendEdge!]!
    pageInfo: NexusGenRootTypes["PageInfo"] // PageInfo!
  }
  FetchPlaylistItemsResponse: {
    // field return type
    edges: NexusGenRootTypes["PlaylistItemEdge"][] // [PlaylistItemEdge!]!
    pageInfo: NexusGenRootTypes["PageInfo"] // PageInfo!
    playlistDescription: string | null // String
    playlistName: string // String!
  }
  FetchPlaylistsResponse: {
    // field return type
    edges: NexusGenRootTypes["PlaylistEdge"][] // [PlaylistEdge!]!
    pageInfo: NexusGenRootTypes["PageInfo"] // PageInfo!
  }
  FetchPreviewPlaylistsResponse: {
    // field return type
    edges: NexusGenRootTypes["PreviewPlaylistEdge"][] // [PreviewPlaylistEdge!]!
    pageInfo: NexusGenRootTypes["PageInfo"] // PageInfo!
  }
  FetchPublishesResponse: {
    // field return type
    edges: NexusGenRootTypes["PublishEdge"][] // [PublishEdge!]!
    pageInfo: NexusGenRootTypes["PageInfo"] // PageInfo!
  }
  FetchWatchLaterResponse: {
    // field return type
    edges: NexusGenRootTypes["WatchLaterEdge"][] // [WatchLaterEdge!]!
    pageInfo: NexusGenRootTypes["PageInfo"] // PageInfo!
  }
  Follow: {
    // field return type
    follower: NexusGenRootTypes["Profile"] // Profile!
    followerId: string // String!
    following: NexusGenRootTypes["Profile"] // Profile!
    followingId: string // String!
  }
  Like: {
    // field return type
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    profile: NexusGenRootTypes["Profile"] // Profile!
    profileId: string // String!
    publish: NexusGenRootTypes["Publish"] // Publish!
    publishId: string // String!
  }
  Mutation: {
    // field return type
    addToNewPlaylist: NexusGenRootTypes["WriteResult"] | null // WriteResult
    addToPlaylist: NexusGenRootTypes["WriteResult"] | null // WriteResult
    addToWatchLater: NexusGenRootTypes["WriteResult"] | null // WriteResult
    bookmarkPost: NexusGenRootTypes["WriteResult"] | null // WriteResult
    cacheSession: NexusGenRootTypes["WriteResult"] // WriteResult!
    calculateTips: NexusGenRootTypes["CalculateTipsResult"] | null // CalculateTipsResult
    comment: NexusGenRootTypes["WriteResult"] | null // WriteResult
    countViews: NexusGenRootTypes["WriteResult"] | null // WriteResult
    createAccount: NexusGenRootTypes["Account"] | null // Account
    createDraftBlog: NexusGenRootTypes["CreateDraftBlogResult"] | null // CreateDraftBlogResult
    createDraftVideo: NexusGenRootTypes["CreateDraftVideoResult"] | null // CreateDraftVideoResult
    createProfile: NexusGenRootTypes["Profile"] | null // Profile
    deleteAllPlaylistItems: NexusGenRootTypes["WriteResult"] | null // WriteResult
    deleteComment: NexusGenRootTypes["WriteResult"] | null // WriteResult
    deletePlaylist: NexusGenRootTypes["WriteResult"] | null // WriteResult
    deletePublish: NexusGenRootTypes["WriteResult"] | null // WriteResult
    disLikeComment: NexusGenRootTypes["WriteResult"] | null // WriteResult
    disLikePublish: NexusGenRootTypes["WriteResult"] | null // WriteResult
    dontRecommend: NexusGenRootTypes["WriteResult"] | null // WriteResult
    follow: NexusGenRootTypes["WriteResult"] | null // WriteResult
    likeComment: NexusGenRootTypes["WriteResult"] | null // WriteResult
    likePublish: NexusGenRootTypes["WriteResult"] | null // WriteResult
    removeAllBookmarks: NexusGenRootTypes["WriteResult"] | null // WriteResult
    removeAllWatchLater: NexusGenRootTypes["WriteResult"] | null // WriteResult
    removeBookmark: NexusGenRootTypes["WriteResult"] | null // WriteResult
    removeDontRecommend: NexusGenRootTypes["WriteResult"] | null // WriteResult
    removeFromPlaylist: NexusGenRootTypes["WriteResult"] | null // WriteResult
    removeFromWatchLater: NexusGenRootTypes["WriteResult"] | null // WriteResult
    reportPublish: NexusGenRootTypes["WriteResult"] | null // WriteResult
    sendTips: NexusGenRootTypes["SendTipsResult"] | null // SendTipsResult
    updateBannerImage: NexusGenRootTypes["WriteResult"] | null // WriteResult
    updateBlog: NexusGenRootTypes["WriteResult"] | null // WriteResult
    updateDisplayName: NexusGenRootTypes["WriteResult"] | null // WriteResult
    updateName: NexusGenRootTypes["WriteResult"] | null // WriteResult
    updatePlaylistDescription: NexusGenRootTypes["WriteResult"] | null // WriteResult
    updatePlaylistName: NexusGenRootTypes["WriteResult"] | null // WriteResult
    updatePlaylists: NexusGenRootTypes["WriteResult"] | null // WriteResult
    updateProfileImage: NexusGenRootTypes["WriteResult"] | null // WriteResult
    updateReadPreferences: NexusGenRootTypes["WriteResult"] | null // WriteResult
    updateVideo: NexusGenRootTypes["Publish"] | null // Publish
    updateWatchPreferences: NexusGenRootTypes["WriteResult"] | null // WriteResult
    validateName: boolean | null // Boolean
  }
  PageInfo: {
    // field return type
    count: number | null // Int
    endCursor: string | null // String
    hasNextPage: boolean | null // Boolean
  }
  Playback: {
    // field return type
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    dash: string // String!
    duration: number // Float!
    hls: string // String!
    id: string // ID!
    preview: string // String!
    publish: NexusGenRootTypes["Publish"] | null // Publish
    publishId: string // String!
    thumbnail: string // String!
    updatedAt: NexusGenScalars["DateTime"] | null // DateTime
    videoId: string // String!
  }
  Playlist: {
    // field return type
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    description: string | null // String
    id: string // ID!
    items: NexusGenRootTypes["PlaylistItem"][] // [PlaylistItem!]!
    name: string // String!
    owner: NexusGenRootTypes["Profile"] // Profile!
    ownerId: string // String!
  }
  PlaylistEdge: {
    // field return type
    cursor: string | null // String
    node: NexusGenRootTypes["Playlist"] | null // Playlist
  }
  PlaylistItem: {
    // field return type
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    id: string // ID!
    playlist: NexusGenRootTypes["Playlist"] // Playlist!
    playlistId: string // String!
    publish: NexusGenRootTypes["Publish"] // Publish!
    publishId: string // String!
  }
  PlaylistItemEdge: {
    // field return type
    cursor: string | null // String
    node: NexusGenRootTypes["PlaylistItem"] | null // PlaylistItem
  }
  PreviewPlaylist: {
    // field return type
    count: number // Int!
    id: string // String!
    lastItem: NexusGenRootTypes["Publish"] | null // Publish
    name: string // String!
  }
  PreviewPlaylistEdge: {
    // field return type
    cursor: string | null // String
    node: NexusGenRootTypes["PreviewPlaylist"] | null // PreviewPlaylist
  }
  Profile: {
    // field return type
    account: NexusGenRootTypes["Account"] // Account!
    accountId: string // String!
    bannerImage: string | null // String
    bannerImageRef: string | null // String
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    defaultColor: string | null // String
    displayName: string // String!
    followersCount: number // Int!
    followingCount: number // Int!
    id: string // ID!
    image: string | null // String
    imageRef: string | null // String
    isFollowing: boolean | null // Boolean
    isOwner: boolean | null // Boolean
    name: string // String!
    owner: string // String!
    playlists: NexusGenRootTypes["Playlist"][] // [Playlist!]!
    publishes: NexusGenRootTypes["Publish"][] // [Publish!]!
    publishesCount: number // Int!
    readPreferences: NexusGenEnums["Category"][] // [Category!]!
    updatedAt: NexusGenScalars["DateTime"] | null // DateTime
    watchLater: NexusGenRootTypes["WatchLater"][] // [WatchLater!]!
    watchPreferences: NexusGenEnums["Category"][] // [Category!]!
  }
  Publish: {
    // field return type
    blog: NexusGenRootTypes["Blog"] | null // Blog
    bookmarked: boolean | null // Boolean
    comments: NexusGenRootTypes["Comment"][] // [Comment!]!
    commentsCount: number // Int!
    contentRef: string | null // String
    contentURI: string | null // String
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    creator: NexusGenRootTypes["Profile"] // Profile!
    creatorId: string // String!
    deleting: boolean // Boolean!
    description: string | null // String
    disLiked: boolean | null // Boolean
    disLikesCount: number // Int!
    dislikes: NexusGenRootTypes["DisLike"][] // [DisLike!]!
    filename: string | null // String
    id: string // ID!
    lastComment: NexusGenRootTypes["Comment"] | null // Comment
    liked: boolean | null // Boolean
    likes: NexusGenRootTypes["Like"][] // [Like!]!
    likesCount: number // Int!
    playback: NexusGenRootTypes["Playback"] | null // Playback
    primaryCategory: NexusGenEnums["Category"] | null // Category
    publishType: NexusGenEnums["PublishType"] | null // PublishType
    secondaryCategory: NexusGenEnums["Category"] | null // Category
    tags: string | null // String
    thumbnail: string | null // String
    thumbnailRef: string | null // String
    thumbnailType: NexusGenEnums["ThumbnailType"] // ThumbnailType!
    tips: NexusGenRootTypes["Tip"][] // [Tip!]!
    tipsCount: number // Int!
    title: string | null // String
    transcodeError: boolean // Boolean!
    updatedAt: NexusGenScalars["DateTime"] | null // DateTime
    uploadError: boolean // Boolean!
    uploading: boolean // Boolean!
    views: number // Int!
    visibility: NexusGenEnums["Visibility"] // Visibility!
  }
  PublishEdge: {
    // field return type
    cursor: string | null // String
    node: NexusGenRootTypes["Publish"] | null // Publish
  }
  Query: {
    // field return type
    checkPublishPlaylists:
      | NexusGenRootTypes["CheckPublishPlaylistsResponse"]
      | null // CheckPublishPlaylistsResponse
    fetchBookmarks: NexusGenRootTypes["FetchBookmarkResponse"] | null // FetchBookmarkResponse
    fetchCommentsByPublishId: NexusGenRootTypes["FetchCommentsResponse"] | null // FetchCommentsResponse
    fetchDontRecommends: NexusGenRootTypes["FetchDontRecommendsResponse"] | null // FetchDontRecommendsResponse
    fetchMyPlaylists: NexusGenRootTypes["FetchPlaylistsResponse"] | null // FetchPlaylistsResponse
    fetchMyPublishes: NexusGenRootTypes["FetchPublishesResponse"] | null // FetchPublishesResponse
    fetchPlaylistItems: NexusGenRootTypes["FetchPlaylistItemsResponse"] | null // FetchPlaylistItemsResponse
    fetchPreviewBookmarks: NexusGenRootTypes["FetchBookmarkResponse"] | null // FetchBookmarkResponse
    fetchPreviewPlaylists:
      | NexusGenRootTypes["FetchPreviewPlaylistsResponse"]
      | null // FetchPreviewPlaylistsResponse
    fetchPreviewWatchLater: NexusGenRootTypes["FetchWatchLaterResponse"] | null // FetchWatchLaterResponse
    fetchProfilePublishes: NexusGenRootTypes["FetchPublishesResponse"] | null // FetchPublishesResponse
    fetchPublishes: NexusGenRootTypes["FetchPublishesResponse"] | null // FetchPublishesResponse
    fetchPublishesByQueryString:
      | NexusGenRootTypes["FetchPublishesResponse"]
      | null // FetchPublishesResponse
    fetchPublishesByTag: NexusGenRootTypes["FetchPublishesResponse"] | null // FetchPublishesResponse
    fetchSubComments: NexusGenRootTypes["FetchCommentsResponse"] | null // FetchCommentsResponse
    fetchSuggestedBlogs: NexusGenRootTypes["FetchPublishesResponse"] | null // FetchPublishesResponse
    fetchSuggestedVideos: NexusGenRootTypes["FetchPublishesResponse"] | null // FetchPublishesResponse
    fetchVideosByCategory: NexusGenRootTypes["FetchPublishesResponse"] | null // FetchPublishesResponse
    fetchWatchLater: NexusGenRootTypes["FetchWatchLaterResponse"] | null // FetchWatchLaterResponse
    getBalance: string // String!
    getMyAccount: NexusGenRootTypes["Account"] | null // Account
    getProfileById: NexusGenRootTypes["Profile"] | null // Profile
    getProfileByName: NexusGenRootTypes["Profile"] | null // Profile
    getPublishById: NexusGenRootTypes["Publish"] | null // Publish
    getShort: NexusGenRootTypes["Publish"] | null // Publish
  }
  Report: {
    // field return type
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    id: string // ID!
    publish: NexusGenRootTypes["Publish"] // Publish!
    publishId: string // String!
    reason: NexusGenEnums["ReportReason"] // ReportReason!
    submittedBy: NexusGenRootTypes["Profile"] // Profile!
    submittedById: string // String!
  }
  SendTipsResult: {
    // field return type
    amount: string // String!
    fee: string // String!
    from: string // String!
    to: string // String!
  }
  Tip: {
    // field return type
    amount: string // String!
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    fee: string // String!
    from: string // String!
    id: string // ID!
    publish: NexusGenRootTypes["Publish"] // Publish!
    publishId: string // String!
    receiver: NexusGenRootTypes["Profile"] // Profile!
    receiverId: string // String!
    sender: NexusGenRootTypes["Profile"] // Profile!
    senderId: string // String!
    to: string // String!
  }
  WatchLater: {
    // field return type
    createdAt: NexusGenScalars["DateTime"] // DateTime!
    id: string // ID!
    profile: NexusGenRootTypes["Profile"] // Profile!
    profileId: string // String!
    publish: NexusGenRootTypes["Publish"] // Publish!
    publishId: string // String!
  }
  WatchLaterEdge: {
    // field return type
    cursor: string | null // String
    node: NexusGenRootTypes["WatchLater"] | null // WatchLater
  }
  WriteResult: {
    // field return type
    status: string // String!
  }
}

export interface NexusGenFieldTypeNames {
  Account: {
    // field return type name
    authUid: "String"
    createdAt: "DateTime"
    defaultProfile: "Profile"
    id: "ID"
    owner: "String"
    profiles: "Profile"
    type: "AccountType"
    updatedAt: "DateTime"
  }
  Blog: {
    // field return type name
    content: "Json"
    createdAt: "DateTime"
    excerpt: "String"
    htmlContent: "String"
    publish: "Publish"
    publishId: "String"
    readingTime: "String"
    updatedAt: "DateTime"
  }
  Bookmark: {
    // field return type name
    createdAt: "DateTime"
    id: "ID"
    profile: "Profile"
    profileId: "String"
    publish: "Publish"
    publishId: "String"
  }
  BookmarkEdge: {
    // field return type name
    cursor: "String"
    node: "Bookmark"
  }
  CalculateTipsResult: {
    // field return type name
    tips: "String"
  }
  CheckPublishPlaylistsResponse: {
    // field return type name
    isInWatchLater: "Boolean"
    items: "PlaylistItem"
    publishId: "String"
  }
  Comment: {
    // field return type name
    comment: "Comment"
    commentId: "String"
    commentType: "CommentType"
    comments: "Comment"
    commentsCount: "Int"
    content: "String"
    contentBlog: "Json"
    createdAt: "DateTime"
    creator: "Profile"
    creatorId: "String"
    disLiked: "Boolean"
    disLikes: "CommentDisLike"
    disLikesCount: "Int"
    htmlContentBlog: "String"
    id: "ID"
    liked: "Boolean"
    likes: "CommentLike"
    likesCount: "Int"
    publish: "Publish"
    publishId: "String"
    updatedAt: "DateTime"
  }
  CommentDisLike: {
    // field return type name
    comment: "Comment"
    commentId: "String"
    profile: "Profile"
    profileId: "String"
  }
  CommentEdge: {
    // field return type name
    cursor: "String"
    node: "Comment"
  }
  CommentLike: {
    // field return type name
    comment: "Comment"
    commentId: "String"
    profile: "Profile"
    profileId: "String"
  }
  CreateDraftBlogResult: {
    // field return type name
    id: "String"
  }
  CreateDraftVideoResult: {
    // field return type name
    filename: "String"
    id: "String"
  }
  DisLike: {
    // field return type name
    createdAt: "DateTime"
    profile: "Profile"
    profileId: "String"
    publish: "Publish"
    publishId: "String"
  }
  DontRecommend: {
    // field return type name
    createdAt: "DateTime"
    requestorId: "String"
    target: "Profile"
    targetId: "String"
  }
  DontRecommendEdge: {
    // field return type name
    cursor: "String"
    node: "DontRecommend"
  }
  FetchBookmarkResponse: {
    // field return type name
    edges: "BookmarkEdge"
    pageInfo: "PageInfo"
  }
  FetchCommentsResponse: {
    // field return type name
    edges: "CommentEdge"
    pageInfo: "PageInfo"
  }
  FetchDontRecommendsResponse: {
    // field return type name
    edges: "DontRecommendEdge"
    pageInfo: "PageInfo"
  }
  FetchPlaylistItemsResponse: {
    // field return type name
    edges: "PlaylistItemEdge"
    pageInfo: "PageInfo"
    playlistDescription: "String"
    playlistName: "String"
  }
  FetchPlaylistsResponse: {
    // field return type name
    edges: "PlaylistEdge"
    pageInfo: "PageInfo"
  }
  FetchPreviewPlaylistsResponse: {
    // field return type name
    edges: "PreviewPlaylistEdge"
    pageInfo: "PageInfo"
  }
  FetchPublishesResponse: {
    // field return type name
    edges: "PublishEdge"
    pageInfo: "PageInfo"
  }
  FetchWatchLaterResponse: {
    // field return type name
    edges: "WatchLaterEdge"
    pageInfo: "PageInfo"
  }
  Follow: {
    // field return type name
    follower: "Profile"
    followerId: "String"
    following: "Profile"
    followingId: "String"
  }
  Like: {
    // field return type name
    createdAt: "DateTime"
    profile: "Profile"
    profileId: "String"
    publish: "Publish"
    publishId: "String"
  }
  Mutation: {
    // field return type name
    addToNewPlaylist: "WriteResult"
    addToPlaylist: "WriteResult"
    addToWatchLater: "WriteResult"
    bookmarkPost: "WriteResult"
    cacheSession: "WriteResult"
    calculateTips: "CalculateTipsResult"
    comment: "WriteResult"
    countViews: "WriteResult"
    createAccount: "Account"
    createDraftBlog: "CreateDraftBlogResult"
    createDraftVideo: "CreateDraftVideoResult"
    createProfile: "Profile"
    deleteAllPlaylistItems: "WriteResult"
    deleteComment: "WriteResult"
    deletePlaylist: "WriteResult"
    deletePublish: "WriteResult"
    disLikeComment: "WriteResult"
    disLikePublish: "WriteResult"
    dontRecommend: "WriteResult"
    follow: "WriteResult"
    likeComment: "WriteResult"
    likePublish: "WriteResult"
    removeAllBookmarks: "WriteResult"
    removeAllWatchLater: "WriteResult"
    removeBookmark: "WriteResult"
    removeDontRecommend: "WriteResult"
    removeFromPlaylist: "WriteResult"
    removeFromWatchLater: "WriteResult"
    reportPublish: "WriteResult"
    sendTips: "SendTipsResult"
    updateBannerImage: "WriteResult"
    updateBlog: "WriteResult"
    updateDisplayName: "WriteResult"
    updateName: "WriteResult"
    updatePlaylistDescription: "WriteResult"
    updatePlaylistName: "WriteResult"
    updatePlaylists: "WriteResult"
    updateProfileImage: "WriteResult"
    updateReadPreferences: "WriteResult"
    updateVideo: "Publish"
    updateWatchPreferences: "WriteResult"
    validateName: "Boolean"
  }
  PageInfo: {
    // field return type name
    count: "Int"
    endCursor: "String"
    hasNextPage: "Boolean"
  }
  Playback: {
    // field return type name
    createdAt: "DateTime"
    dash: "String"
    duration: "Float"
    hls: "String"
    id: "ID"
    preview: "String"
    publish: "Publish"
    publishId: "String"
    thumbnail: "String"
    updatedAt: "DateTime"
    videoId: "String"
  }
  Playlist: {
    // field return type name
    createdAt: "DateTime"
    description: "String"
    id: "ID"
    items: "PlaylistItem"
    name: "String"
    owner: "Profile"
    ownerId: "String"
  }
  PlaylistEdge: {
    // field return type name
    cursor: "String"
    node: "Playlist"
  }
  PlaylistItem: {
    // field return type name
    createdAt: "DateTime"
    id: "ID"
    playlist: "Playlist"
    playlistId: "String"
    publish: "Publish"
    publishId: "String"
  }
  PlaylistItemEdge: {
    // field return type name
    cursor: "String"
    node: "PlaylistItem"
  }
  PreviewPlaylist: {
    // field return type name
    count: "Int"
    id: "String"
    lastItem: "Publish"
    name: "String"
  }
  PreviewPlaylistEdge: {
    // field return type name
    cursor: "String"
    node: "PreviewPlaylist"
  }
  Profile: {
    // field return type name
    account: "Account"
    accountId: "String"
    bannerImage: "String"
    bannerImageRef: "String"
    createdAt: "DateTime"
    defaultColor: "String"
    displayName: "String"
    followersCount: "Int"
    followingCount: "Int"
    id: "ID"
    image: "String"
    imageRef: "String"
    isFollowing: "Boolean"
    isOwner: "Boolean"
    name: "String"
    owner: "String"
    playlists: "Playlist"
    publishes: "Publish"
    publishesCount: "Int"
    readPreferences: "Category"
    updatedAt: "DateTime"
    watchLater: "WatchLater"
    watchPreferences: "Category"
  }
  Publish: {
    // field return type name
    blog: "Blog"
    bookmarked: "Boolean"
    comments: "Comment"
    commentsCount: "Int"
    contentRef: "String"
    contentURI: "String"
    createdAt: "DateTime"
    creator: "Profile"
    creatorId: "String"
    deleting: "Boolean"
    description: "String"
    disLiked: "Boolean"
    disLikesCount: "Int"
    dislikes: "DisLike"
    filename: "String"
    id: "ID"
    lastComment: "Comment"
    liked: "Boolean"
    likes: "Like"
    likesCount: "Int"
    playback: "Playback"
    primaryCategory: "Category"
    publishType: "PublishType"
    secondaryCategory: "Category"
    tags: "String"
    thumbnail: "String"
    thumbnailRef: "String"
    thumbnailType: "ThumbnailType"
    tips: "Tip"
    tipsCount: "Int"
    title: "String"
    transcodeError: "Boolean"
    updatedAt: "DateTime"
    uploadError: "Boolean"
    uploading: "Boolean"
    views: "Int"
    visibility: "Visibility"
  }
  PublishEdge: {
    // field return type name
    cursor: "String"
    node: "Publish"
  }
  Query: {
    // field return type name
    checkPublishPlaylists: "CheckPublishPlaylistsResponse"
    fetchBookmarks: "FetchBookmarkResponse"
    fetchCommentsByPublishId: "FetchCommentsResponse"
    fetchDontRecommends: "FetchDontRecommendsResponse"
    fetchMyPlaylists: "FetchPlaylistsResponse"
    fetchMyPublishes: "FetchPublishesResponse"
    fetchPlaylistItems: "FetchPlaylistItemsResponse"
    fetchPreviewBookmarks: "FetchBookmarkResponse"
    fetchPreviewPlaylists: "FetchPreviewPlaylistsResponse"
    fetchPreviewWatchLater: "FetchWatchLaterResponse"
    fetchProfilePublishes: "FetchPublishesResponse"
    fetchPublishes: "FetchPublishesResponse"
    fetchPublishesByQueryString: "FetchPublishesResponse"
    fetchPublishesByTag: "FetchPublishesResponse"
    fetchSubComments: "FetchCommentsResponse"
    fetchSuggestedBlogs: "FetchPublishesResponse"
    fetchSuggestedVideos: "FetchPublishesResponse"
    fetchVideosByCategory: "FetchPublishesResponse"
    fetchWatchLater: "FetchWatchLaterResponse"
    getBalance: "String"
    getMyAccount: "Account"
    getProfileById: "Profile"
    getProfileByName: "Profile"
    getPublishById: "Publish"
    getShort: "Publish"
  }
  Report: {
    // field return type name
    createdAt: "DateTime"
    id: "ID"
    publish: "Publish"
    publishId: "String"
    reason: "ReportReason"
    submittedBy: "Profile"
    submittedById: "String"
  }
  SendTipsResult: {
    // field return type name
    amount: "String"
    fee: "String"
    from: "String"
    to: "String"
  }
  Tip: {
    // field return type name
    amount: "String"
    createdAt: "DateTime"
    fee: "String"
    from: "String"
    id: "ID"
    publish: "Publish"
    publishId: "String"
    receiver: "Profile"
    receiverId: "String"
    sender: "Profile"
    senderId: "String"
    to: "String"
  }
  WatchLater: {
    // field return type name
    createdAt: "DateTime"
    id: "ID"
    profile: "Profile"
    profileId: "String"
    publish: "Publish"
    publishId: "String"
  }
  WatchLaterEdge: {
    // field return type name
    cursor: "String"
    node: "WatchLater"
  }
  WriteResult: {
    // field return type name
    status: "String"
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    addToNewPlaylist: {
      // args
      input: NexusGenInputs["CreatePlayListInput"] // CreatePlayListInput!
    }
    addToPlaylist: {
      // args
      input: NexusGenInputs["AddToPlaylistInput"] // AddToPlaylistInput!
    }
    addToWatchLater: {
      // args
      input: NexusGenInputs["AddToWatchLaterInput"] // AddToWatchLaterInput!
    }
    bookmarkPost: {
      // args
      input: NexusGenInputs["BookmarkPostInput"] // BookmarkPostInput!
    }
    cacheSession: {
      // args
      input: NexusGenInputs["CacheSessionInput"] // CacheSessionInput!
    }
    calculateTips: {
      // args
      qty: number // Int!
    }
    comment: {
      // args
      input: NexusGenInputs["CommentPublishInput"] // CommentPublishInput!
    }
    countViews: {
      // args
      publishId: string // String!
    }
    createAccount: {
      // args
      input: NexusGenInputs["GetMyAccountInput"] // GetMyAccountInput!
    }
    createDraftBlog: {
      // args
      input: NexusGenInputs["CreateDraftBlogInput"] // CreateDraftBlogInput!
    }
    createDraftVideo: {
      // args
      input: NexusGenInputs["CreateDraftVideoInput"] // CreateDraftVideoInput!
    }
    createProfile: {
      // args
      input: NexusGenInputs["CreateProfileInput"] // CreateProfileInput!
    }
    deleteAllPlaylistItems: {
      // args
      input: NexusGenInputs["DeletePlaylistInput"] // DeletePlaylistInput!
    }
    deleteComment: {
      // args
      input: NexusGenInputs["DeleteCommentInput"] // DeleteCommentInput!
    }
    deletePlaylist: {
      // args
      input: NexusGenInputs["DeletePlaylistInput"] // DeletePlaylistInput!
    }
    deletePublish: {
      // args
      input: NexusGenInputs["DeletePublishInput"] // DeletePublishInput!
    }
    disLikeComment: {
      // args
      input: NexusGenInputs["LikeCommentInput"] // LikeCommentInput!
    }
    disLikePublish: {
      // args
      input: NexusGenInputs["LikePublishInput"] // LikePublishInput!
    }
    dontRecommend: {
      // args
      input: NexusGenInputs["DontRecommendInput"] // DontRecommendInput!
    }
    follow: {
      // args
      input: NexusGenInputs["FollowInput"] // FollowInput!
    }
    likeComment: {
      // args
      input: NexusGenInputs["LikeCommentInput"] // LikeCommentInput!
    }
    likePublish: {
      // args
      input: NexusGenInputs["LikePublishInput"] // LikePublishInput!
    }
    removeAllBookmarks: {
      // args
      input: NexusGenInputs["RemoveAllBookmarksInput"] // RemoveAllBookmarksInput!
    }
    removeAllWatchLater: {
      // args
      input: NexusGenInputs["RemoveAllWatchLaterInput"] // RemoveAllWatchLaterInput!
    }
    removeBookmark: {
      // args
      input: NexusGenInputs["BookmarkPostInput"] // BookmarkPostInput!
    }
    removeDontRecommend: {
      // args
      input: NexusGenInputs["DontRecommendInput"] // DontRecommendInput!
    }
    removeFromPlaylist: {
      // args
      input: NexusGenInputs["RemoveFromPlaylistInput"] // RemoveFromPlaylistInput!
    }
    removeFromWatchLater: {
      // args
      input: NexusGenInputs["RemoveFromWatchLaterInput"] // RemoveFromWatchLaterInput!
    }
    reportPublish: {
      // args
      input: NexusGenInputs["ReportPublishInput"] // ReportPublishInput!
    }
    sendTips: {
      // args
      input: NexusGenInputs["SendTipsInput"] // SendTipsInput!
    }
    updateBannerImage: {
      // args
      input: NexusGenInputs["UpdateImageInput"] // UpdateImageInput!
    }
    updateBlog: {
      // args
      input: NexusGenInputs["UpdateBlogInput"] // UpdateBlogInput!
    }
    updateDisplayName: {
      // args
      input: NexusGenInputs["UpdateNameInput"] // UpdateNameInput!
    }
    updateName: {
      // args
      input: NexusGenInputs["UpdateNameInput"] // UpdateNameInput!
    }
    updatePlaylistDescription: {
      // args
      input: NexusGenInputs["UpdatePlaylistDescriptionInput"] // UpdatePlaylistDescriptionInput!
    }
    updatePlaylistName: {
      // args
      input: NexusGenInputs["UpdatePlaylistNameInput"] // UpdatePlaylistNameInput!
    }
    updatePlaylists: {
      // args
      input: NexusGenInputs["UpdatePlaylistsInput"] // UpdatePlaylistsInput!
    }
    updateProfileImage: {
      // args
      input: NexusGenInputs["UpdateImageInput"] // UpdateImageInput!
    }
    updateReadPreferences: {
      // args
      input: NexusGenInputs["UpdatePreferencesInput"] // UpdatePreferencesInput!
    }
    updateVideo: {
      // args
      input: NexusGenInputs["UpdateVideoInput"] // UpdateVideoInput!
    }
    updateWatchPreferences: {
      // args
      input: NexusGenInputs["UpdatePreferencesInput"] // UpdatePreferencesInput!
    }
    validateName: {
      // args
      name: string // String!
    }
  }
  Query: {
    checkPublishPlaylists: {
      // args
      input: NexusGenInputs["CheckPublishPlaylistsInput"] // CheckPublishPlaylistsInput!
    }
    fetchBookmarks: {
      // args
      input: NexusGenInputs["FetchBookmarkInput"] // FetchBookmarkInput!
    }
    fetchCommentsByPublishId: {
      // args
      input: NexusGenInputs["FetchCommentsByPublishIdInput"] // FetchCommentsByPublishIdInput!
    }
    fetchDontRecommends: {
      // args
      input: NexusGenInputs["FetchDontRecommendsInput"] // FetchDontRecommendsInput!
    }
    fetchMyPlaylists: {
      // args
      input: NexusGenInputs["FetchMyPlaylistsInput"] // FetchMyPlaylistsInput!
    }
    fetchMyPublishes: {
      // args
      input: NexusGenInputs["FetchMyPublishesInput"] // FetchMyPublishesInput!
    }
    fetchPlaylistItems: {
      // args
      input: NexusGenInputs["FetchPlaylistItemsInput"] // FetchPlaylistItemsInput!
    }
    fetchPreviewBookmarks: {
      // args
      input: NexusGenInputs["FetchBookmarkInput"] // FetchBookmarkInput!
    }
    fetchPreviewPlaylists: {
      // args
      input: NexusGenInputs["FetchMyPlaylistsInput"] // FetchMyPlaylistsInput!
    }
    fetchPreviewWatchLater: {
      // args
      input: NexusGenInputs["FetchWatchLaterInput"] // FetchWatchLaterInput!
    }
    fetchProfilePublishes: {
      // args
      input: NexusGenInputs["FetchPublishesByProfileInput"] // FetchPublishesByProfileInput!
    }
    fetchPublishes: {
      // args
      input: NexusGenInputs["FetchPublishesInput"] // FetchPublishesInput!
    }
    fetchPublishesByQueryString: {
      // args
      input: NexusGenInputs["FetchPublishesByQueryStringInput"] // FetchPublishesByQueryStringInput!
    }
    fetchPublishesByTag: {
      // args
      input: NexusGenInputs["FetchPublishesByTagInput"] // FetchPublishesByTagInput!
    }
    fetchSubComments: {
      // args
      input: NexusGenInputs["FetchSubCommentsInput"] // FetchSubCommentsInput!
    }
    fetchSuggestedBlogs: {
      // args
      input: NexusGenInputs["FetchSuggestedPublishesInput"] // FetchSuggestedPublishesInput!
    }
    fetchSuggestedVideos: {
      // args
      input: NexusGenInputs["FetchSuggestedPublishesInput"] // FetchSuggestedPublishesInput!
    }
    fetchVideosByCategory: {
      // args
      input: NexusGenInputs["FetchPublishesByCatInput"] // FetchPublishesByCatInput!
    }
    fetchWatchLater: {
      // args
      input: NexusGenInputs["FetchWatchLaterInput"] // FetchWatchLaterInput!
    }
    getBalance: {
      // args
      address: string // String!
    }
    getMyAccount: {
      // args
      input: NexusGenInputs["GetMyAccountInput"] // GetMyAccountInput!
    }
    getProfileById: {
      // args
      input: NexusGenInputs["QueryByIdInput"] // QueryByIdInput!
    }
    getProfileByName: {
      // args
      input: NexusGenInputs["QueryByNameInput"] // QueryByNameInput!
    }
    getPublishById: {
      // args
      input: NexusGenInputs["QueryByIdInput"] // QueryByIdInput!
    }
    getShort: {
      // args
      input: NexusGenInputs["QueryByIdInput"] // QueryByIdInput!
    }
  }
}

export interface NexusGenAbstractTypeMembers {}

export interface NexusGenTypeInterfaces {}

export type NexusGenObjectNames = keyof NexusGenObjects

export type NexusGenInputNames = keyof NexusGenInputs

export type NexusGenEnumNames = keyof NexusGenEnums

export type NexusGenInterfaceNames = never

export type NexusGenScalarNames = keyof NexusGenScalars

export type NexusGenUnionNames = never

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never

export type NexusGenAbstractsUsingStrategyResolveType = never

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  // context: Context;
  inputTypes: NexusGenInputs
  rootTypes: NexusGenRootTypes
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars
  argTypes: NexusGenArgTypes
  fieldTypes: NexusGenFieldTypes
  fieldTypeNames: NexusGenFieldTypeNames
  allTypes: NexusGenAllTypes
  typeInterfaces: NexusGenTypeInterfaces
  objectNames: NexusGenObjectNames
  inputNames: NexusGenInputNames
  enumNames: NexusGenEnumNames
  interfaceNames: NexusGenInterfaceNames
  scalarNames: NexusGenScalarNames
  unionNames: NexusGenUnionNames
  allInputTypes:
    | NexusGenTypes["inputNames"]
    | NexusGenTypes["enumNames"]
    | NexusGenTypes["scalarNames"]
  allOutputTypes:
    | NexusGenTypes["objectNames"]
    | NexusGenTypes["enumNames"]
    | NexusGenTypes["unionNames"]
    | NexusGenTypes["interfaceNames"]
    | NexusGenTypes["scalarNames"]
  allNamedTypes:
    | NexusGenTypes["allInputTypes"]
    | NexusGenTypes["allOutputTypes"]
  abstractTypes: NexusGenTypes["interfaceNames"] | NexusGenTypes["unionNames"]
  abstractTypeMembers: NexusGenAbstractTypeMembers
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType
  features: NexusGenFeaturesConfig
}

declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {}
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {}
  interface NexusGenPluginFieldConfig<
    TypeName extends string,
    FieldName extends string
  > {}
  interface NexusGenPluginInputFieldConfig<
    TypeName extends string,
    FieldName extends string
  > {}
  interface NexusGenPluginSchemaConfig {}
  interface NexusGenPluginArgConfig {}
}
